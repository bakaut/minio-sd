#include /usr/local/openresty/nginx/conf/upstream.conf;
#include /usr/local/openresty/nginx/conf/proxy_cache.conf;
include /usr/local/openresty/nginx/conf/limit_req.conf;

server {
    listen 80;
    server_name {{ key "MINIO/ENV/MINIO_LB_NAME" }}.{{ key "MINIO/ENV/MINIO_FQDN" }}; 
    return 307 https://{{ key "MINIO/ENV/MINIO_LB_NAME" }}.{{ key "MINIO/ENV/MINIO_FQDN" }}$request_uri;
}

server {
    listen 443 ssl http2;
    server_name {{ key "MINIO/ENV/MINIO_LB_NAME" }}.{{ key "MINIO/ENV/MINIO_FQDN" }};
    server_name_in_redirect off;
    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 512m;
   
    #access_log  /usr/local/openresty/nginx/conf/logs/access_zabbix.log  rtime;

    large_client_header_buffers 8 8k;

    ssl_certificate     /usr/local/openresty/nginx/conf/ssl/ssl-pub.crt;
    ssl_certificate_key /usr/local/openresty/nginx/conf/ssl/ssl-priv.key;
    ssl_protocols	SSLv3 TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;
    ssl_session_tickets off;

    location / {
        try_files {{range service "minio"}}@{{.Node}} {{end}};
    }
    {{range service "minio"}}
    location @{{.Node}} {
        
        #include /usr/local/openresty/nginx/conf/proxy_cache_headers.conf;

        limit_req zone=mylimit burst=60 nodelay;

        proxy_ignore_headers Set-Cookie;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_buffering off;

        proxy_connect_timeout 10s;
        proxy_read_timeout 15s;
        proxy_send_timeout 15s;


        # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_pass http://{{.Node}}:{{.Port}};
    }{{end}}
    location =/nginx_status {
        stub_status on;
        access_log   off;
        allow 127.0.0.1;
        deny all;
    }

}